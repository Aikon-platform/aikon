{"version":3,"file":"ModalSimilarity-2f339890.js","sources":["../../../../webpack/src/regions/modal/ModalSimilarityOverlay.svelte","../../../../webpack/src/regions/modal/ModalSimilaritySideBySide.svelte","../../../../webpack/src/regions/modal/ModalSimilarity.svelte"],"sourcesContent":["<script>\n    import { appLang } from \"../../constants.js\";\n    import { setContext } from 'svelte';\n    import { writable } from 'svelte/store';\n\n    import InputDropdown from \"../../ui/InputDropdown.svelte\";\n    import InputSlider from \"../../ui/InputSlider.svelte\";\n\n    /** @typedef {import(\"../../ui/InputDropdown.svelte\").DropdownChoiceArray} DropdownChoiceArray */\n    /** @typedef {import(\"./types.js\").SimilarityImgDataType} SimilarityImgDataType */\n\n    /////////////////////////////////////////////\n\n    /** @type {SimilarityImgDataType} */\n    export let imgData;\n\n    /** @type {DropdownChoiceArray} */\n    const flipChoices = [\n        { value:\"h\", label: appLang===\"fr\" ? \"Basculer horizontalement\" : \"Flip horizontally\" },\n        { value:\"v\", label: appLang===\"fr\" ? \"Basculer verticalement\" : \"Flip vertically\" },\n        { value:\"hv\", label: appLang===\"fr\" ? \"Basculer horizontalement et verticalement\" : \"Flip horizontally and vertically\" }\n    ]\n\n    /** @type {number} 0..1 */\n    let overlayOpacity = 0.5;\n    const startOverlayOpacity = overlayOpacity;\n\n    /** @type {number} 0..360 */\n    let overlayRotation = 0;\n    const startOverlayRotation = overlayRotation;\n\n    /** @type {number} 0..200. css uses 0..1 values, but to make things more readable we use a 0..200% scale */\n    let overlayScale = 100\n    const startOverlayScale = overlayScale;\n\n    /** @type {number[]} [0..2, 0..2] X/Y values for css `scale` to perform a flip. will be combined with overlayScale */\n    let overlayFlip = [1,1];\n    const startOverlayFlip = structuredClone(overlayFlip);\n\n    /** @type{number[]} [-100..100, -100..100] */\n    let overlayTranslate = [0,0];\n    const startOverlayTranslate = structuredClone(overlayTranslate);\n\n    let currentlyResetting = false;\n\n    /** @type {writable} set a new value to trigger an update in descendant form components that implement this behaviour */\n    const resetTrigger = writable(window.crypto.randomUUID());\n    setContext(\"resetTrigger\", resetTrigger);\n\n    $: cssTransforms = `translate(${overlayTranslate[0]-50}%, ${overlayTranslate[1]}%)\n                        rotate(${overlayRotation}deg)\n                        scale(${overlayFlip.map((x) => x * (overlayScale/100)).join()})`;\n\n    /////////////////////////////////////////////\n\n    const updateOverlayOpacity = (e) => overlayOpacity = e.detail;\n\n    const updateOverlayRotation = (e) => overlayRotation = e.detail;\n\n    const updateOverlayScale = (e) => overlayScale = e.detail;\n\n    // reassignment is necessary to redefine `cssTransforms`\n    const updateOverlayTranslateX = (e) => overlayTranslate = [ e.detail, overlayTranslate[1] ];\n\n    const updateOverlayTranslateY = (e) => overlayTranslate = [ overlayTranslate[0], e.detail ];\n\n    const updateOverlayFlip = (e) => {\n        let flip = e.detail[0];\n        overlayFlip =\n            flip === \"hv\"\n            ? [-1,-1]\n            : flip === \"h\"\n            ? [-1, 1]\n            : flip === \"v\"\n            ? [1,-1]\n            : [1,1];\n    }\n\n    const resetOverlayParams = () => {\n        overlayOpacity = startOverlayOpacity;\n        overlayRotation = startOverlayRotation;\n        overlayScale = startOverlayScale;\n        overlayFlip = startOverlayFlip;\n        overlayTranslate = startOverlayTranslate;\n        // forme elements will be reset\n        resetTrigger.set(window.crypto.randomUUID());\n        // will set a css class which will animate resetting.\n        currentlyResetting = true;\n        setTimeout(() => currentlyResetting = false, 1000);\n    }\n</script>\n\n<div class=\"similarity-overlay-wrapper\">\n    <div class=\"toolbar-wrapper is-flex is-flex-direction-column is-justify-content-center is-align-items-center\">\n        <div class=\"toolbar\">\n            <div class=\"toolbar-title mt-0 mb-2\">\n                <strong>Transform query image</strong>\n            </div>\n            <div class=\"toolbar-controls is-flex is-flex-direction-column is-align-items-start is-justify-content-center\">\n                <div class=\"\">\n                    <InputSlider minVal={0}\n                                maxVal={1}\n                                start={startOverlayOpacity}\n                                emitOnUpdate={true}\n                                title={appLang===\"fr\" ? \"Opacité\" : \"Opacity\"}\n                                on:updateSlider={updateOverlayOpacity}\n                    ></InputSlider>\n                </div>\n                <div class=\"\">\n                    <InputSlider minVal={0}\n                                maxVal={360}\n                                start={startOverlayRotation}\n                                step={1}\n                                emitOnUpdate={true}\n                                title=\"Rotation\"\n                                on:updateSlider={updateOverlayRotation}\n                    ></InputSlider>\n                </div>\n                <div class=\"\">\n                    <InputSlider minVal={0}\n                                maxVal={200}\n                                step={1}\n                                start={startOverlayScale}\n                                emitOnUpdate={true}\n                                title={appLang===\"fr\" ? \"Redimensionner\" : \"Scale\"}\n                                on:updateSlider={updateOverlayScale}\n                    ></InputSlider>\n                </div>\n                <div class=\"\">\n                    <InputSlider minVal={-100}\n                                maxVal={100}\n                                step={1}\n                                start={startOverlayTranslate[0]}\n                                emitOnUpdate={true}\n                                title={appLang===\"fr\" ? \"Translation horizontale\" : \"Horizontal translate\"}\n                                on:updateSlider={updateOverlayTranslateX}\n                    ></InputSlider>\n                </div>\n                <div class=\"\">\n                    <InputSlider minVal={-100}\n                                maxVal={100}\n                                step={1}\n                                start={startOverlayTranslate[1]}\n                                emitOnUpdate={true}\n                                title={appLang===\"fr\" ? \"Translation verticale\" : \"Vertical translate\"}\n                                on:updateSlider={updateOverlayTranslateY}\n                    ></InputSlider>\n                </div>\n                <div class=\"\">\n                    <InputDropdown choicesItems={flipChoices}\n                                start={[]}\n                                lightDisplay={true}\n                                placeholder={appLang===\"fr\" ? \"Séléctionner\" : \"Select\"}\n                                title={appLang===\"fr\" ? \"Basculer\" : \"Flip\"}\n                                on:updateValues={updateOverlayFlip}\n                    ></InputDropdown>\n                </div>\n                <div class=\"mt-2 is-flex is-flex-direction-column is-justify-content-center is-align-items-flex-end\">\n                    <button class=\"button is-link\"\n                            on:click={resetOverlayParams}\n                    >{appLang===\"fr\" ? \"Réinitialiser\" : \"Reset\"}</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"overlay-wrapper\">\n        <img class=\"compare-img\"\n             src={imgData.queryImage.href}\n             alt={imgData.queryImage.title}\n        >\n        <img class=\"main-img\"\n             class:overlay-reset={currentlyResetting}\n             src={imgData.similarityImage.href}\n             alt={imgData.similarityImage.title}\n             style:opacity={overlayOpacity}\n             style:transform={cssTransforms}\n        >\n    </div>\n</div>\n\n<style>\n    .similarity-overlay-wrapper {\n        display: grid;\n        grid-template-columns: max(230px, 25%) min(calc(100% - 230px), 75%);\n        grid-template-rows: 100%;\n    }\n    .toolbar-wrapper {\n        padding-right: 1rem;\n        border-right: var(--default-border);\n    }\n    .toolbar {\n        min-width: 200px;\n        width: 100%;\n    }\n    .toolbar-title {\n        width: 100%;\n    }\n    .toolbar-controls > * {\n        width: 100%;\n    }\n    .overlay-wrapper {\n        position: relative;\n        height: 100%;\n        overflow: scroll;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-left: 1rem;\n    }\n    .overlay-wrapper img {\n        position: absolute;\n        left: 50%;\n        transform: translate(-50%, 0);\n    }\n    .overlay-reset {\n        transition: opacity .3s ease-out, transform .3s ease-out;\n    }\n</style>\n","<script>\n    import { getContext } from \"svelte\";\n\n    import { appLang } from \"../../constants.js\";\n    import { getDesc } from \"../similarity/utils.js\";\n\n    import Region from \"../Region.svelte\";\n\n    /** @typedef {import(\"./types.js\").SimilarityImgDataType} SimilarityImgDataType */\n    /** @typedef {import(\"../similarity/types.js\").SimilarityPairType} SimilarityPairType */\n\n    //////////////////////////////////////////////\n\n    /** @type {SimilarityImgDataType} */\n    export let imgData;\n\n    /** @type {SimilarityPairType} */\n    const similarityPairContext = getContext(\"similarityPair\");\n\n    const windowUrl = new URL(window.location.href)\n    const baseUrl = windowUrl.origin;\n    const pathUrl = windowUrl.pathname;\n\n    const [qWit, qDigit, qCanvas, qXywh] = similarityPairContext.qImg.split('.')[0].split('_');\n    const [sWit, sDigit, sCanvas, sXywh] = similarityPairContext.sImg.split('.')[0].split('_');\n    const qRegionRef = `${qWit}_${qDigit}`;\n    const sRegionRef = `${sWit}_${sDigit}`;\n\n    /** @type {{ queryImage: Promise<string>, similarityImage: Promise<string> }}*/\n    const descPromiseObj = {\n        queryImage: getDesc(qRegionRef, similarityPairContext.similarityType, similarityPairContext.score, qCanvas, baseUrl, pathUrl, true, false),\n        similarityImage: getDesc(sRegionRef, similarityPairContext.similarityType, similarityPairContext.score, sCanvas, baseUrl, pathUrl, true, true),\n    }\n</script>\n\n<div class=\"side-by-side columns\">\n    {#each [\"queryImage\", \"similarityImage\"] as k}\n        <div class=\"img-legend-wrapper column is-flex is-flex-direction-column is-justify-content-center is-align-items-center\">\n            <span>{\n                k===\"queryImage\" && appLang===\"fr\"\n                ? \"Image requête\"\n                : k===\"similarityImage\" && appLang===\"fr\"\n                ? \"Similarité\"\n                : k===\"queryImage\" && appLang===\"en\"\n                ? \"Query image\"\n                : \"Similarity\"\n            }</span>\n            <Region item={imgData[k]}\n                    descPromise={descPromiseObj[k]}\n                    height=\"full\"\n            ></Region>\n        </div>\n    {/each}\n</div>\n\n<style>\n\n</style>\n","<script>\n    import { refToIIIF } from \"../../utils\";\n    import { appLang } from \"../../constants.js\";\n\n    import InputToggle from \"../../ui/InputToggle.svelte\";\n    import ModalSimilarityOverlay from \"./ModalSimilarityOverlay.svelte\";\n    import ModalSimilaritySideBySide from \"./ModalSimilaritySideBySide.svelte\";\n\n    /** @typedef {import(\"../types.js\").RegionItemType} RegionItemType */\n    /** @typedef {import(\"./types.js\").SimilarityOverlayType} SimilarityOverlayType */\n    /** @typedef {import(\"./types.js\").SimilaritySideBySideType} SimilaritySideBySideType */\n\n    /////////////////////////////////////////////\n\n    /** @type {RegionItemType} */\n    export let mainImgItem;\n    /** @type {RegionItemType} */\n    export let compareImgItem;\n\n    /** @type {SimilarityOverlayType} */\n    const imgDataOverlay = {\n        similarityImage: { href: refToIIIF(mainImgItem.img), title: makeAlt(mainImgItem.title) },\n        queryImage: { href: refToIIIF(compareImgItem.img), title: makeAlt(compareImgItem.title) }\n    }\n    /** @type {SimilaritySideBySideType} */\n    const imgDataSideBySide = {\n        similarityImage: mainImgItem,\n        queryImage: compareImgItem\n    }\n    /** @type {boolean} */\n    let overlay = false;\n\n    /////////////////////////////////////////////\n\n    function makeAlt (title) {\n        return appLang===\"fr\"\n            ? `Vue principale de la région ${title}`\n            : `Main view of region ${title}`;\n    }\n\n    const updateToggleOverlay = () => overlay = !overlay;\n</script>\n\n<div class=\"modal-similarity\">\n    <div class=\"modal-similarity-images {overlay ? 'overlay-wrapper' : 'side-by-side-wrapper'}\">\n        {#if overlay}\n            <ModalSimilarityOverlay imgData={imgDataOverlay}></ModalSimilarityOverlay>\n        {:else}\n            <ModalSimilaritySideBySide imgData={imgDataSideBySide}></ModalSimilaritySideBySide>\n        {/if}\n    </div>\n    <div>\n        <InputToggle start={false}\n                     buttonDisplay={true}\n                     toggleLabel={appLang===\"en\" ? \"Overlay view\" : \"Vue superposée\"}\n                     on:updateChecked={updateToggleOverlay}\n        ></InputToggle>\n    </div>\n</div>\n\n<style>\n    .modal-similarity {\n        display: grid;\n        grid-template-columns: 100%;\n        height: 100%;\n        max-height: 100%;\n        grid-template-rows: 90% 10%;\n    }\n    .modal-similarity-images.overlay-wrapper {\n        display: grid;\n        grid-template-rows: 1fr 0fr;\n    }\n    :global(.modal-similarity-images > *) {\n        height: 100%;\n    }\n    :global(.modal-similarity-images img) {\n        object-fit: contain;\n        max-height: 100%;\n        max-width: 100%;\n        z-index: 2;\n        padding: .25rem;\n    }\n</style>\n"],"names":["ctx","title","appLang","start","placeholder","button","textContent","queryImage","href","attr","img0","img0_src_value","similarityImage","img1","img1_src_value","insert","target","div12","anchor","append","div10","div9","div0","div8","div1","div2","div3","div4","div5","div6","div7","div11","imgData","$$props","flipChoices","value","label","overlayOpacity","startOverlayOpacity","overlayRotation","startOverlayRotation","overlayScale","startOverlayScale","overlayFlip","startOverlayFlip","structuredClone","overlayTranslate","startOverlayTranslate","currentlyResetting","resetTrigger","writable","window","crypto","randomUUID","setContext","$$invalidate","cssTransforms","map","x","join","e","detail","flip","set","setTimeout","t0_value","item","descPromise","div","span","dirty","region_changes","each_value","similarityPairContext","getContext","windowUrl","URL","location","baseUrl","origin","pathUrl","pathname","qWit","qDigit","qCanvas","qXywh","qImg","split","sWit","sDigit","sCanvas","sXywh","sImg","sRegionRef","descPromiseObj","getDesc","similarityType","score","toggleLabel","mainImgItem","compareImgItem","imgDataOverlay","refToIIIF","img","makeAlt","imgDataSideBySide","overlay"],"mappings":"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"}
