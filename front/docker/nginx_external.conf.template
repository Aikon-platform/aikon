server {
    listen                      80;
    server_name                 PROD_URL;
    return                      301 https://$server_name$request_uri;
}

server {
    listen                      443 ssl;
    server_name                 PROD_URL;

    access_log                  /var/log/nginx/aikon_access.log   combined;
    error_log                   /var/log/nginx/aikon_error.log    debug;

    ssl_certificate             SSL_CERTIFICATE;
    ssl_certificate_key         SSL_KEY;

    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers   on;
    ssl_ciphers                 ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         10m;
    ssl_stapling                on;
    ssl_stapling_verify         on;
    resolver                    8.8.8.8;

    client_max_body_size        NGINX_MAX_BODY_SIZE;

    add_header                  X-Frame-Options         "SAMEORIGIN"                        always;
    add_header                  X-Content-Type-Options  "nosniff"                           always;
    add_header                  Referrer-Policy         "strict-origin-when-cross-origin"   always;

    location / {
        proxy_pass              http://127.0.0.1:NGINX_PORT;
        proxy_set_header        Host                   $host;
        proxy_set_header        X-Real-IP              $remote_addr;
        proxy_set_header        X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto      $scheme;

        proxy_set_header        Upgrade                $http_upgrade;
        proxy_set_header        Connection             "upgrade";
        proxy_http_version      1.1;

        proxy_connect_timeout   NGINX_TIMEOUT;
        proxy_send_timeout      NGINX_TIMEOUT;
        proxy_read_timeout      NGINX_TIMEOUT;
        send_timeout            NGINX_TIMEOUT;
    }
}
